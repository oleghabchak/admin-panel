{
  "version": 3,
  "sources": ["../../insert-css/index.js"],
  "sourcesContent": ["var containers = []; // will store container HTMLElement references\nvar styleElements = []; // will store {prepend: HTMLElement, append: HTMLElement}\n\nvar usage = 'insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).';\n\nfunction insertCss(css, options) {\n    options = options || {};\n\n    if (css === undefined) {\n        throw new Error(usage);\n    }\n\n    var position = options.prepend === true ? 'prepend' : 'append';\n    var container = options.container !== undefined ? options.container : document.querySelector('head');\n    var containerId = containers.indexOf(container);\n\n    // first time we see this container, create the necessary entries\n    if (containerId === -1) {\n        containerId = containers.push(container) - 1;\n        styleElements[containerId] = {};\n    }\n\n    // try to get the correponding container + position styleElement, create it otherwise\n    var styleElement;\n\n    if (styleElements[containerId] !== undefined && styleElements[containerId][position] !== undefined) {\n        styleElement = styleElements[containerId][position];\n    } else {\n        styleElement = styleElements[containerId][position] = createStyleElement();\n\n        if (position === 'prepend') {\n            container.insertBefore(styleElement, container.childNodes[0]);\n        } else {\n            container.appendChild(styleElement);\n        }\n    }\n\n    // strip potential UTF-8 BOM if css was read from a file\n    if (css.charCodeAt(0) === 0xFEFF) { css = css.substr(1, css.length); }\n\n    // actually add the stylesheet\n    if (styleElement.styleSheet) {\n        styleElement.styleSheet.cssText += css\n    } else {\n        styleElement.textContent += css;\n    }\n\n    return styleElement;\n};\n\nfunction createStyleElement() {\n    var styleElement = document.createElement('style');\n    styleElement.setAttribute('type', 'text/css');\n    return styleElement;\n}\n\nmodule.exports = insertCss;\nmodule.exports.insertCss = insertCss;\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,QAAI,aAAa,CAAC;AAClB,QAAI,gBAAgB,CAAC;AAErB,QAAI,QAAQ;AAEZ,aAAS,UAAU,KAAK,SAAS;AAC7B,gBAAU,WAAW,CAAC;AAEtB,UAAI,QAAQ,QAAW;AACnB,cAAM,IAAI,MAAM,KAAK;AAAA,MACzB;AAEA,UAAI,WAAW,QAAQ,YAAY,OAAO,YAAY;AACtD,UAAI,YAAY,QAAQ,cAAc,SAAY,QAAQ,YAAY,SAAS,cAAc,MAAM;AACnG,UAAI,cAAc,WAAW,QAAQ,SAAS;AAG9C,UAAI,gBAAgB,IAAI;AACpB,sBAAc,WAAW,KAAK,SAAS,IAAI;AAC3C,sBAAc,WAAW,IAAI,CAAC;AAAA,MAClC;AAGA,UAAI;AAEJ,UAAI,cAAc,WAAW,MAAM,UAAa,cAAc,WAAW,EAAE,QAAQ,MAAM,QAAW;AAChG,uBAAe,cAAc,WAAW,EAAE,QAAQ;AAAA,MACtD,OAAO;AACH,uBAAe,cAAc,WAAW,EAAE,QAAQ,IAAI,mBAAmB;AAEzE,YAAI,aAAa,WAAW;AACxB,oBAAU,aAAa,cAAc,UAAU,WAAW,CAAC,CAAC;AAAA,QAChE,OAAO;AACH,oBAAU,YAAY,YAAY;AAAA,QACtC;AAAA,MACJ;AAGA,UAAI,IAAI,WAAW,CAAC,MAAM,OAAQ;AAAE,cAAM,IAAI,OAAO,GAAG,IAAI,MAAM;AAAA,MAAG;AAGrE,UAAI,aAAa,YAAY;AACzB,qBAAa,WAAW,WAAW;AAAA,MACvC,OAAO;AACH,qBAAa,eAAe;AAAA,MAChC;AAEA,aAAO;AAAA,IACX;AAEA,aAAS,qBAAqB;AAC1B,UAAI,eAAe,SAAS,cAAc,OAAO;AACjD,mBAAa,aAAa,QAAQ,UAAU;AAC5C,aAAO;AAAA,IACX;AAEA,WAAO,UAAU;AACjB,WAAO,QAAQ,YAAY;AAAA;AAAA;",
  "names": []
}
